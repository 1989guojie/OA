<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        			    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        			    http://www.springframework.org/schema/context
        			    http://www.springframework.org/schema/context/spring-context-4.0.xsd
        			    http://www.springframework.org/schema/aop
        			    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        			    http://www.springframework.org/schema/util
        			    http://www.springframework.org/schema/util/spring-util-4.0.xsd
        			    http://www.springframework.org/schema/tx
        			    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    
     
    <!-- 开启组件扫描 : 扫描用这四种注解@Service() @Repository() @Controller @Component 注解的bean，扫描到后会交由Spring容器管理-->
    <context:component-scan base-package="org.fkjava.oa"></context:component-scan>
    
    
    <!-- 配置数据源，默认到src下加载c3p0.properties属性文件,可以不用导入占位符的配置，但要以c3p0.url等形式 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" />
    
    <!-- 配置SessionFactory,new configuration默认加载 src/hibernate.properties属性文件-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
    	  p:dataSource-ref="dataSource">
    	  <!-- 持久化类采用包扫描 -->
    	  <property name="packagesToScan">
    	  	  <value>
    	  	  		org.fkjava.oa.admin.identity.domain,
    	  	  		org.fkjava.oa.admin.leave.domain
    	  	  </value>
    	  </property>
    </bean>	  
       			    
    <!-- 配置事务管理器，用hibernate.properties代替hibernate.cfg.xml -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
    	  p:sessionFactory-ref="sessionFactory"/>
    
    <!-- 换成注解方式 -->
    <!-- 声明式事务配置 -->
<!--     <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    		set开头的只能做查询
    		<tx:method name="set*" read-only="true"/>
    		get开头的只能做查询
    		<tx:method name="get*" read-only="true"/>
    		剩余的方法可以做CUD (R)
    		<tx:method name="*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.RuntimeException"/>
    	</tx:attributes>
    </tx:advice> -->
    
     <!-- 事务切面 -->
<!--     <aop:config>
    	定义切入点
    	<aop:pointcut expression="execution(* org.fkjava.oa.*.*.service.*.*.*(..))" id="pointcut"/>
    	事务运用到指定的切入点 
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config> -->
    
    <!-- 开启annotaiton注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
         			    
</beans>